{"version":3,"sources":["components/Note.jsx","components/Notification.jsx","services/notes.js","App.jsx","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","noteService","getAll","a","request","axios","get","response","data","create","newObject","post","update","id","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","then","notesToShow","filter","map","find","n","changedNote","catch","error","setTimeout","onSubmit","e","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"0LAUeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCE3BK,EAPM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAEF,qBAAKJ,UAAU,QAAf,SAAwBI,K,uCCH3BC,EAAU,wDA0BDC,EANK,CAClBC,OAnBU,uCAAG,8BAAAC,EAAA,6DACPC,EAAUC,IAAMC,IAAIN,GADb,SAEUI,EAFV,cAEPG,EAFO,yBAGNA,EAASC,MAHH,2CAAH,qDAoBVC,OAdU,uCAAG,WAAOC,GAAP,iBAAAP,EAAA,6DACPC,EAAUC,IAAMM,KAAKX,EAASU,GADvB,SAEUN,EAFV,cAEPG,EAFO,yBAGNA,EAASC,MAHH,2CAAH,sDAeVI,OATU,uCAAG,WAAOC,EAAIH,GAAX,iBAAAP,EAAA,6DACPC,EAAUC,IAAMS,IAAN,UAAad,EAAb,YAAwBa,GAAMH,GADjC,SAEUN,EAFV,cAEPG,EAFO,yBAGNA,EAASC,MAHH,2CAAH,yDCwFGO,EAjGH,SAACC,GAEX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,uBAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACRzB,EAAYC,SAASyB,MAAK,SAACpB,GACzBY,EAASZ,QAEV,IAEH,IAoBMqB,EAAcN,EAChBJ,EACAA,EAAMW,QAAO,SAACtC,GAAD,OAA6B,IAAnBA,EAAKG,aAkChC,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAASyB,IACvB,8BACE,yBAAQ3B,QArCO,kBAAM0B,GAAYD,IAqCjC,kBACQA,EAAU,YAAc,WAGlC,6BACGM,EAAYE,KAAI,SAACvC,GAChB,OACE,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBA7CL,SAACqB,GAIxB,IAAMtB,EAAO2B,EAAMa,MAAK,SAACC,GAAD,OAAOA,EAAEnB,KAAOA,KAElCoB,EAAW,2BAAQ1C,GAAR,IAAcG,WAAYH,EAAKG,YAGhDO,EACGW,OAAOC,EAAIoB,GACXN,MAAK,SAACpB,GACLY,EAASD,EAAMY,KAAI,SAACvC,GAAD,OAAWA,EAAKsB,KAAOA,EAAKtB,EAAOgB,SAEvD2B,OAAM,SAACC,GACNV,EAAgB,SAAD,OACJlC,EAAKK,QADD,0CAGfwC,YAAW,WACTX,EAAgB,QACf,KACHN,EAASD,EAAMW,QAAO,SAACG,GAAD,OAAOA,EAAEnB,KAAOA,SAwBRrB,CAAiBD,EAAKsB,MAFzCtB,EAAKsB,SAOlB,uBAAMwB,SA5EW,SAACC,GACpBA,EAAEC,iBAGF,IAAMC,EAAa,CACjB5C,QAASwB,EACTqB,MAAM,IAAIC,MAAOC,cACjBjD,UAAWkD,KAAKC,SAAW,GAC3BhC,GAAIK,EAAM4B,OAAS,GAGrB7C,EAAYQ,OAAO+B,GAAYb,MAAK,SAACpB,GACnCY,EAASD,EAAM6B,OAAOxC,IACtBc,EAAW,QA+DX,UACE,uBAAO2B,MAAO5B,EAAS6B,SA5DT,SAACX,GAAD,OAAOjB,EAAWiB,EAAEY,OAAOF,UA6DzC,iD,MC5FRG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2ad9244f.chunk.js","sourcesContent":["const Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","const Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n  return <div className=\"error\">{message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\nconst baseUrl = \"https://powerful-tundra-27423.herokuapp.com/api/notes\";\n\nconst getAll = async () => {\n  const request = axios.get(baseUrl);\n  const response = await request;\n  return response.data;\n};\n\nconst create = async (newObject) => {\n  const request = axios.post(baseUrl, newObject);\n  const response = await request;\n  return response.data;\n};\n\nconst update = async (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  const response = await request;\n  return response.data;\n};\n\nconst noteService = {\n  getAll,\n  create,\n  update,\n};\n\nexport default noteService;\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\n// import axios from \"axios\";\nimport noteService from \"./services/notes\";\n\nconst App = (props) => {\n  // const { notes } = props;\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"some error happened\");\n\n  useEffect(() => {\n    noteService.getAll().then((response) => {\n      setNotes(response);\n    });\n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // setNotes()\n    // console.log(\"button clicked\", e.target);\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1,\n    };\n\n    noteService.create(noteObject).then((response) => {\n      setNotes(notes.concat(response));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleInput = (e) => setNewNote(e.target.value);\n  // console.log(newNote);\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n  const handleToggle = () => setShowAll(!showAll);\n\n  const toggleImportance = (id) => {\n    // console.log(\"the importance of\", id, \"has been toggled\");\n    // const url = `http://10.1.1.183:3001/notes/${id}`;\n    // console.log(url);\n    const note = notes.find((n) => n.id === id);\n    // console.log(note);\n    const changedNote = { ...note, important: !note.important };\n    // console.log(changedNote);\n\n    noteService\n      .update(id, changedNote)\n      .then((response) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : response)));\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from the server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n\n    // axios.put(url, changedNote).then((response) => {\n    //   // console.log(response);\n    //   setNotes(notes.map((n) => (n.id !== id ? note : response.data)));\n    // });\n  };\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={handleToggle}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => {\n          return (\n            <Note\n              key={note.id}\n              note={note}\n              toggleImportance={() => toggleImportance(note.id)}\n            />\n          );\n        })}\n      </ul>\n      <form onSubmit={handleSubmit}>\n        <input value={newNote} onChange={handleInput} />\n        <button>save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n// import axios from 'axios'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// this is a test\n\n// const notes = [\n//   {\n//     id: 1,\n//     content: \"HTML is easy\",\n//     date: \"2019-05-30T17:30:31.098Z\",\n//     important: true,\n//   },\n//   {\n//     id: 2,\n//     content: \"Browser can execute only JavaScript\",\n//     date: \"2019-05-30T18:39:34.091Z\",\n//     important: false,\n//   },\n//   {\n//     id: 3,\n//     content: \"GET and POST are the most important methods of HTTP protocol\",\n//     date: \"2019-05-30T19:20:14.298Z\",\n//     important: true,\n//   },\n// ];\n"],"sourceRoot":""}